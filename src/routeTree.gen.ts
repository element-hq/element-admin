/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as CallbackRouteImport } from './routes/callback'
import { Route as ConsoleRouteImport } from './routes/_console'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as ConsoleIndexRouteImport } from './routes/_console.index'
import { Route as ConsoleUsersRouteImport } from './routes/_console.users'
import { Route as ConsoleRoomsRouteImport } from './routes/_console.rooms'
import { Route as ConsoleRegistrationTokensRouteImport } from './routes/_console.registration-tokens'
import { Route as AuthLoginIndexRouteImport } from './routes/_auth.login.index'
import { Route as ConsoleUsersUserIdRouteImport } from './routes/_console.users.$userId'
import { Route as ConsoleRoomsRoomIdRouteImport } from './routes/_console.rooms.$roomId'
import { Route as ConsoleRegistrationTokensTokenIdRouteImport } from './routes/_console.registration-tokens.$tokenId'
import { Route as AuthLoginServerNameRouteImport } from './routes/_auth.login.$serverName'

const CallbackRoute = CallbackRouteImport.update({
  id: '/callback',
  path: '/callback',
  getParentRoute: () => rootRouteImport,
} as any)
const ConsoleRoute = ConsoleRouteImport.update({
  id: '/_console',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const ConsoleIndexRoute = ConsoleIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ConsoleRoute,
} as any)
const ConsoleUsersRoute = ConsoleUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => ConsoleRoute,
} as any)
const ConsoleRoomsRoute = ConsoleRoomsRouteImport.update({
  id: '/rooms',
  path: '/rooms',
  getParentRoute: () => ConsoleRoute,
} as any)
const ConsoleRegistrationTokensRoute =
  ConsoleRegistrationTokensRouteImport.update({
    id: '/registration-tokens',
    path: '/registration-tokens',
    getParentRoute: () => ConsoleRoute,
  } as any)
const AuthLoginIndexRoute = AuthLoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => AuthRoute,
} as any)
const ConsoleUsersUserIdRoute = ConsoleUsersUserIdRouteImport.update({
  id: '/$userId',
  path: '/$userId',
  getParentRoute: () => ConsoleUsersRoute,
} as any)
const ConsoleRoomsRoomIdRoute = ConsoleRoomsRoomIdRouteImport.update({
  id: '/$roomId',
  path: '/$roomId',
  getParentRoute: () => ConsoleRoomsRoute,
} as any)
const ConsoleRegistrationTokensTokenIdRoute =
  ConsoleRegistrationTokensTokenIdRouteImport.update({
    id: '/$tokenId',
    path: '/$tokenId',
    getParentRoute: () => ConsoleRegistrationTokensRoute,
  } as any)
const AuthLoginServerNameRoute = AuthLoginServerNameRouteImport.update({
  id: '/login/$serverName',
  path: '/login/$serverName',
  getParentRoute: () => AuthRoute,
} as any)

export interface FileRoutesByFullPath {
  '/callback': typeof CallbackRoute
  '/registration-tokens': typeof ConsoleRegistrationTokensRouteWithChildren
  '/rooms': typeof ConsoleRoomsRouteWithChildren
  '/users': typeof ConsoleUsersRouteWithChildren
  '/': typeof ConsoleIndexRoute
  '/login/$serverName': typeof AuthLoginServerNameRoute
  '/registration-tokens/$tokenId': typeof ConsoleRegistrationTokensTokenIdRoute
  '/rooms/$roomId': typeof ConsoleRoomsRoomIdRoute
  '/users/$userId': typeof ConsoleUsersUserIdRoute
  '/login': typeof AuthLoginIndexRoute
}
export interface FileRoutesByTo {
  '/callback': typeof CallbackRoute
  '/registration-tokens': typeof ConsoleRegistrationTokensRouteWithChildren
  '/rooms': typeof ConsoleRoomsRouteWithChildren
  '/users': typeof ConsoleUsersRouteWithChildren
  '/': typeof ConsoleIndexRoute
  '/login/$serverName': typeof AuthLoginServerNameRoute
  '/registration-tokens/$tokenId': typeof ConsoleRegistrationTokensTokenIdRoute
  '/rooms/$roomId': typeof ConsoleRoomsRoomIdRoute
  '/users/$userId': typeof ConsoleUsersUserIdRoute
  '/login': typeof AuthLoginIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth': typeof AuthRouteWithChildren
  '/_console': typeof ConsoleRouteWithChildren
  '/callback': typeof CallbackRoute
  '/_console/registration-tokens': typeof ConsoleRegistrationTokensRouteWithChildren
  '/_console/rooms': typeof ConsoleRoomsRouteWithChildren
  '/_console/users': typeof ConsoleUsersRouteWithChildren
  '/_console/': typeof ConsoleIndexRoute
  '/_auth/login/$serverName': typeof AuthLoginServerNameRoute
  '/_console/registration-tokens/$tokenId': typeof ConsoleRegistrationTokensTokenIdRoute
  '/_console/rooms/$roomId': typeof ConsoleRoomsRoomIdRoute
  '/_console/users/$userId': typeof ConsoleUsersUserIdRoute
  '/_auth/login/': typeof AuthLoginIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/callback'
    | '/registration-tokens'
    | '/rooms'
    | '/users'
    | '/'
    | '/login/$serverName'
    | '/registration-tokens/$tokenId'
    | '/rooms/$roomId'
    | '/users/$userId'
    | '/login'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/callback'
    | '/registration-tokens'
    | '/rooms'
    | '/users'
    | '/'
    | '/login/$serverName'
    | '/registration-tokens/$tokenId'
    | '/rooms/$roomId'
    | '/users/$userId'
    | '/login'
  id:
    | '__root__'
    | '/_auth'
    | '/_console'
    | '/callback'
    | '/_console/registration-tokens'
    | '/_console/rooms'
    | '/_console/users'
    | '/_console/'
    | '/_auth/login/$serverName'
    | '/_console/registration-tokens/$tokenId'
    | '/_console/rooms/$roomId'
    | '/_console/users/$userId'
    | '/_auth/login/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  ConsoleRoute: typeof ConsoleRouteWithChildren
  CallbackRoute: typeof CallbackRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/callback': {
      id: '/callback'
      path: '/callback'
      fullPath: '/callback'
      preLoaderRoute: typeof CallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_console': {
      id: '/_console'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ConsoleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_console/': {
      id: '/_console/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ConsoleIndexRouteImport
      parentRoute: typeof ConsoleRoute
    }
    '/_console/users': {
      id: '/_console/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof ConsoleUsersRouteImport
      parentRoute: typeof ConsoleRoute
    }
    '/_console/rooms': {
      id: '/_console/rooms'
      path: '/rooms'
      fullPath: '/rooms'
      preLoaderRoute: typeof ConsoleRoomsRouteImport
      parentRoute: typeof ConsoleRoute
    }
    '/_console/registration-tokens': {
      id: '/_console/registration-tokens'
      path: '/registration-tokens'
      fullPath: '/registration-tokens'
      preLoaderRoute: typeof ConsoleRegistrationTokensRouteImport
      parentRoute: typeof ConsoleRoute
    }
    '/_auth/login/': {
      id: '/_auth/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_console/users/$userId': {
      id: '/_console/users/$userId'
      path: '/$userId'
      fullPath: '/users/$userId'
      preLoaderRoute: typeof ConsoleUsersUserIdRouteImport
      parentRoute: typeof ConsoleUsersRoute
    }
    '/_console/rooms/$roomId': {
      id: '/_console/rooms/$roomId'
      path: '/$roomId'
      fullPath: '/rooms/$roomId'
      preLoaderRoute: typeof ConsoleRoomsRoomIdRouteImport
      parentRoute: typeof ConsoleRoomsRoute
    }
    '/_console/registration-tokens/$tokenId': {
      id: '/_console/registration-tokens/$tokenId'
      path: '/$tokenId'
      fullPath: '/registration-tokens/$tokenId'
      preLoaderRoute: typeof ConsoleRegistrationTokensTokenIdRouteImport
      parentRoute: typeof ConsoleRegistrationTokensRoute
    }
    '/_auth/login/$serverName': {
      id: '/_auth/login/$serverName'
      path: '/login/$serverName'
      fullPath: '/login/$serverName'
      preLoaderRoute: typeof AuthLoginServerNameRouteImport
      parentRoute: typeof AuthRoute
    }
  }
}

interface AuthRouteChildren {
  AuthLoginServerNameRoute: typeof AuthLoginServerNameRoute
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginServerNameRoute: AuthLoginServerNameRoute,
  AuthLoginIndexRoute: AuthLoginIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface ConsoleRegistrationTokensRouteChildren {
  ConsoleRegistrationTokensTokenIdRoute: typeof ConsoleRegistrationTokensTokenIdRoute
}

const ConsoleRegistrationTokensRouteChildren: ConsoleRegistrationTokensRouteChildren =
  {
    ConsoleRegistrationTokensTokenIdRoute:
      ConsoleRegistrationTokensTokenIdRoute,
  }

const ConsoleRegistrationTokensRouteWithChildren =
  ConsoleRegistrationTokensRoute._addFileChildren(
    ConsoleRegistrationTokensRouteChildren,
  )

interface ConsoleRoomsRouteChildren {
  ConsoleRoomsRoomIdRoute: typeof ConsoleRoomsRoomIdRoute
}

const ConsoleRoomsRouteChildren: ConsoleRoomsRouteChildren = {
  ConsoleRoomsRoomIdRoute: ConsoleRoomsRoomIdRoute,
}

const ConsoleRoomsRouteWithChildren = ConsoleRoomsRoute._addFileChildren(
  ConsoleRoomsRouteChildren,
)

interface ConsoleUsersRouteChildren {
  ConsoleUsersUserIdRoute: typeof ConsoleUsersUserIdRoute
}

const ConsoleUsersRouteChildren: ConsoleUsersRouteChildren = {
  ConsoleUsersUserIdRoute: ConsoleUsersUserIdRoute,
}

const ConsoleUsersRouteWithChildren = ConsoleUsersRoute._addFileChildren(
  ConsoleUsersRouteChildren,
)

interface ConsoleRouteChildren {
  ConsoleRegistrationTokensRoute: typeof ConsoleRegistrationTokensRouteWithChildren
  ConsoleRoomsRoute: typeof ConsoleRoomsRouteWithChildren
  ConsoleUsersRoute: typeof ConsoleUsersRouteWithChildren
  ConsoleIndexRoute: typeof ConsoleIndexRoute
}

const ConsoleRouteChildren: ConsoleRouteChildren = {
  ConsoleRegistrationTokensRoute: ConsoleRegistrationTokensRouteWithChildren,
  ConsoleRoomsRoute: ConsoleRoomsRouteWithChildren,
  ConsoleUsersRoute: ConsoleUsersRouteWithChildren,
  ConsoleIndexRoute: ConsoleIndexRoute,
}

const ConsoleRouteWithChildren =
  ConsoleRoute._addFileChildren(ConsoleRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  ConsoleRoute: ConsoleRouteWithChildren,
  CallbackRoute: CallbackRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
